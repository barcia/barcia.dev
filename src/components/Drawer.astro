<button class="Drawer-trigger" aria-label="Open menu">Navigation</button>

<dialog class="Drawer">
    <div class="Container">
        <div class="Drawer-content">
            <div class="Drawer-header">
                <button class="Drawer-close" aria-label="Close menu">
                    Close
                </button>
            </div>
            <slot />
        </div>
    </div>
</dialog>

<style>
    .Drawer {
        --transition-time: 0.2s;
        --transition-timing-function: ease-out;

        transition:
            display var(--transition-time) allow-discrete,
            overlay var(--transition-time) allow-discrete,
            opacity var(--transition-time);
        transition-timing-function: var(--transition-timing-function);
        opacity: 0;

        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100dvh;
        padding: 0;
        margin: 0;
        background-color: white;
        border: none;
        max-width: none;
        max-height: none;
        z-index: 100;
    }

    .Drawer::backdrop {
        background-color: rgba(255, 255, 255, 0);
    }

    .Drawer[open] {
        opacity: 1;
    }

    @starting-style {
        .Drawer[open] {
            opacity: 0;
        }
    }

    .Drawer-logo {
        display: block;
        text-decoration: none;
        color: inherit;
    }

    .Drawer-content {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .Drawer-header {
        position: sticky;
        top: 0;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: var(--size-7) 0;
        z-index: 1;
        margin-bottom: 20px;
    }

    .Drawer-trigger {
        color: white;
    }

    .Drawer-trigger,
    .Drawer-close {
        appearance: none;
        text-transform: lowercase;
        border: none;
        background: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        color: inherit;
        padding: 0;

        &:focus-visible {
            outline: none;
        }
    }
</style>

<script>
    import gsap from "gsap";

    const $drawer = document.querySelector(".Drawer") as HTMLDialogElement;
    const $button = document.querySelector(
        ".Drawer-trigger",
    ) as HTMLButtonElement;
    const $close = document.querySelector(".Drawer-close") as HTMLButtonElement;
    const $body = document.body as HTMLBodyElement;

    const drawerAnimation = gsap.from(".Drawer-content a", {
        opacity: 0,
        y: -10,
        duration: 0.5,
        stagger: 0.1,
        force3D: true,
        ease: "out",
        paused: true,
    });

    const handleOpen = () => {
        $drawer.showModal();
        $body.style.overflow = "hidden";
        $body.setAttribute("inert", "");
        drawerAnimation.restart(true);
    };
    const handleClose = () => {
        $drawer.close();
        $body.style.overflow = "auto";
        $body.removeAttribute("inert");
    };

    $button.addEventListener("click", handleOpen);
    $close.addEventListener("click", handleClose);

    const isDesktopListener = window.matchMedia("(min-width: 1024px)");
    isDesktopListener.addEventListener("change", (ev) => {
        const isDesktop = ev.matches;
        if (isDesktop) {
            handleClose();
        }
    });
</script>
